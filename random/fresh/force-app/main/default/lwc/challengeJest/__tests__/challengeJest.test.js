import { createElement } from 'lwc';
import ChallengeJest from 'c/challengeJest';

async function flushPromises(){
    return Promise.resolve();
}

describe('c-challenge-jest', () => {
    afterEach(() => {
        // The jsdom instance is shared across test cases in a single file so reset the DOM
        while (document.body.firstChild) {
            document.body.removeChild(document.body.firstChild);
        }
    });

    it('TODO: test case generated by CLI command, please fill in test logic', async () => {
        // Arrange
        const element = createElement('c-challenge-jest', {
            is: ChallengeJest
        });

        // Act
        document.body.appendChild(element);
        
        const input = element.shadowRoot.querySelector('.input');
        const button = element.shadowRoot.querySelector('lightning-button');

        input.value = 'Test';

        input.dispatchEvent(new CustomEvent('change'));

        button.click();

        // Assert
        // const div = element.shadowRoot.querySelector('div');
        await flushPromises();
        
        let p = element.shadowRoot.querySelector('p').textContent;

        

        expect(input.value).toBe(p);

        //expect(p.trim()).toBe('Test');

    });
});